{"version":3,"file":"polyfills.min.js","sources":["../src/polyfills.ts","../src/polyfill.remove.ts","../src/polyfill.matches.ts"],"sourcesContent":["/* global Element, CharacterData, DocumentType */\n/**\n * Add polyfills for\n */\nimport polyfillElementRemove from './polyfill.remove.ts'\nimport polyfillElementMatches from './polyfill.matches.ts'\n\npolyfillElementRemove([Element.prototype, CharacterData.prototype, DocumentType.prototype])\npolyfillElementMatches(Element)\n","/**\n * Polyfill element.remove()\n */\n/* istanbul ignore next */\nexport default (arr) => {\n  arr.forEach(function (item) {\n    if (item.hasOwnProperty('remove')) {\n      return\n    }\n    Object.defineProperty(item, 'remove', {\n      configurable: true,\n      enumerable: true,\n      writable: true,\n      value: function remove () {\n        if (this.parentNode !== null) {\n          this.parentNode.removeChild(this)\n        }\n      }\n    })\n  })\n}\n","/**\n * Polyfill element.matches(selector)\n */\n/* istanbul ignore next */\nexport default (Element) => {\n  if (!Element.prototype.matches) {\n    Element.prototype.matches = Element.prototype.msMatchesSelector\n  }\n}\n"],"names":["Element","prototype","CharacterData","DocumentType","forEach","item","hasOwnProperty","Object","defineProperty","configurable","enumerable","writable","value","this","parentNode","removeChild","matches","msMatchesSelector","polyfillElementMatches"],"mappings":"0BAOuBA,QAAQC,UAAWC,cAAcD,UAAWE,aAAaF,WCF1EG,QAAQ,SAAUC,GAChBA,EAAKC,eAAe,WAGxBC,OAAOC,eAAeH,EAAM,UAC1BI,cAAc,EACdC,YAAY,EACZC,UAAU,EACVC,MAAO,WACmB,OAApBC,KAAKC,YACPD,KAAKC,WAAWC,YAAYF,WCXvB,SAACb,GACTA,EAAQC,UAAUe,UACrBhB,EAAQC,UAAUe,QAAUhB,EAAQC,UAAUgB,mBFElDC,CAAuBlB"}